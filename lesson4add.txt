SQLite version 3.37.0 2021-11-27 14:13:22
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.

sqlite> .open teachers.db
sqlite> .tables
courses   grades    streams   teachers

sqlite> .head on
sqlite> SELECT * FROM streams;
id|course_id|number|started_at|students_amount
1|3|165|18.08.2020|34
2|2|178|02.10.2020|37
3|1|203|12.11.2020|35
4|1|210|03.12.2020|41
sqlite> .mode insert
sqlite> SELECT * FROM streams;
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(1,3,'165','18.08.2020',34);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(2,2,'178','02.10.2020',37);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(3,1,'203','12.11.2020',35);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(4,1,'210','03.12.2020',41);
sqlite> UPDATE streams SET started_at=SUBSTR(started_at,7,4)||"-"||SUBSTR(started_at,4,2)||"-"||SUBSTR(started_at,1,2);
sqlite> SELECT * FROM streams;
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(1,3,'165','2020-08-18',34);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(2,2,'178','2020-10-02',37);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(3,1,'203','2020-11-12',35);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(4,1,'210','2020-12-03',41);
sqlite> SELECT * FROM streams ORDER BY started_at ASC
   ...> ;
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(1,3,'165','2020-08-18',34);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(2,2,'178','2020-10-02',37);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(3,1,'203','2020-11-12',35);
INSERT INTO "table"(id,course_id,number,started_at,students_amount) VALUES(4,1,'210','2020-12-03',41);
sqlite> SELECT started_at, MAX(started_at) AS max_date FROM streams
   ...> ;
INSERT INTO "table"(started_at,max_date) VALUES('2020-12-03','2020-12-03');
 
sqlite> SELECT DISTINCT SUBSTR(started_at,1,4) FROM streams
   ...> ;
INSERT INTO "table"("SUBSTR(started_at,1,4)") VALUES('2020');

sqlite> .mode column
sqlite> SELECT * FROM teachers
   ...> ;
id  name     surname   email
--  -------  --------  ----------------------
1   Николай  Савельев  saveliev.n@mai.ru
2   Наталья  Петрова   petrova.n@yandex.ru
3   Елена    Малышева  malisheva.e@google.com

sqlite> .schema teachers
CREATE TABLE teachers (
id INTEGER PRIMARY KEY AUTOINCREMENT,
name TEXT NOT NULL,
surname TEXT NOT NULL,
email TEXT NOT NULL UNIQUE
);
sqlite> SELECT id, MAX(id) AS total_teachers FROM teachers
   ...> ;
id  total_teachers
--  --------------
3   3
sqlite> SELECT id, COUNT(*) AS total_teachers FROM teachers
   ...> ;
id  total_teachers
--  --------------
3   3
sqlite> SELECT * FROM streams ORDER BY started_at DESC LIMIT 2;
id  course_id  number  started_at  students_amount
--  ---------  ------  ----------  ---------------
4   1          210     2020-12-03  41
3   1          203     2020-11-12  35
sqlite> ;
sqlite> .tables
courses   grades    streams   teachers
sqlite> SELECT * grades;
Error: in prepare, near "grades": syntax error (1)
sqlite> SELECT * FROM grades;
teacher_id  streams_id  performance
----------  ----------  -----------
3           1.0         4.7
2           2.0         4.9
1           3.0         4.8
1           4.0         4.9
sqlite> SELECT AVG(performance) FROM grades WHERE teacher_id=1;
AVG(performance)
----------------
4.85
 
sqlite> SELECT teacher_id FROM grades WHERE performance<4.8;
teacher_id
----------
3
sqlite> SELECT * FROM grades WHERE performance<4.8;
teacher_id  streams_id  performance
----------  ----------  -----------
3           1.0         4.7
sqlite> .mode instance
 
sqlite> SELECT * FROM grades WHERE performance<4.8;
INSERT INTO "table"(teacher_id,streams_id,performance) VALUES(3,1.0,4.7000000000000001776);

sqlite> 
sqlite> select * FROM grades GROUP BY teacher_id HAVING AVG(performance)<4.8;
teacher_id|streams_id|performance
3|1.0|4.7
sqlite> select * FROM grades GROUP BY teacher_id HAVING AVG(performance)<4.9;
teacher_id|streams_id|performance
1|3.0|4.8
3|1.0|4.7
sqlite> select * FROM grades GROUP BY teacher_id HAVING AVG(performance)<4.99;
teacher_id|streams_id|performance
1|3.0|4.8
2|2.0|4.9
3|1.0|4.7
sqlite>